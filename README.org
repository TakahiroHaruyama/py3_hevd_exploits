#+OPTIONS: ^:{}
* Python3 exploits for HEVD (HackSys Extreme Vulnerable Driver)

https://github.com/hacksysteam/HackSysExtremeVulnerableDriver

Each exploit was tested on x64 Windows 10  (the version used in the training).

** py3_stack-overflow-gs_kernel_payload.py

An exploit triggering a stack overflow bug in the function protected by Stack Guard. 

The code was ported from the [[https://kristal-g.github.io/2021/02/07/HEVD_StackOverflowGS_Windows_10_RS5_x64.html][Kristal's code]] utilizing an arbitrary read primitive to calculate the stack cookie, except the ROP payload. The initial ROP payload enabling a supervisor bit in PTE was detected by kCFG (KERNEL_SECURITY_CHECK_FAILURE), so I used another payload copying the shellcode to a buffer in kernel-space. I didn't know kCFG still checks whether an address is in kernel-space or not even if VBS is not enabled.

Please note that the process sometimes terminates silently when handling the NtQuerySystemInformation call to obtain the kernel StackLimit value. Just try again if the call fails. And let me know if you know the reason :-)

** TBD

TBD




